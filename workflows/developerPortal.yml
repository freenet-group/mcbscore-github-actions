name: DeveloperPortal Upload
run-name: DeveloperPortal Upload von  ${{ github.event.inputs.component }}:${{ github.event.inputs.componentVersion }} für ${{ github.event.inputs.environment }}

on:
  workflow_call:
    inputs:
      component:
        description: Der Name der Komponente
        type: string
        required: true
      componentVersion:
        description: Die Version der Komponente
        type: string
        required: true
      tagPrefix:
        description: Der Präfix des Tags
        type: string
        required: false
      environment:
        description: Die Zielumgebung
        type: string
        required: true
      actionsRepositoryBranch:
        description: Zu benutzender Branch des Repositories mcbscore-github-actions
        type: string
        required: false
        default: main
      deploymentRepositoryBranch:
        description: Welcher Branch von Repository ms-deployment benutzt werden soll
        type: string
        required: false
        default: main
  workflow_dispatch:
    inputs:
      component:
        description: Der Name der Komponente
        required: true
      componentVersion:
        description: Die Version der Komponente
        required: true
      tagPrefix:
        description: Der Präfix des Tags
        required: false
      environment:
        description: Die Zielumgebung
        required: true
      actionsRepositoryBranch:
        description: Zu benutzender Branch des Repositories mcbscore-github-actions
        required: false
        default: main
      deploymentRepositoryBranch:
        description: Welcher Branch von Repository ms-deployment benutzt werden soll
        required: false
        default: main

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    env:
      ACTIONS_REPOSITORY: freenet-group/mcbscore-github-actions
      ACTIONS_PATH: mcbscore/github
    steps:
      - name: Referenz ermitteln
        shell: bash
        run: |
          if  [[ ${{ inputs.componentVersion }} =~ '-SNAPSHOT' ]] ;
          then
            echo "DEPLOYMENT_REF=${{ github.ref }}" >> $GITHUB_ENV
          else
            echo "DEPLOYMENT_REF=${{ github.event.inputs.tagPrefix }}${{ inputs.componentVersion }}" >> $GITHUB_ENV
          fi

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.DEPLOYMENT_REF }}

      - name: Setup jq
        uses: freenet-actions/setup-jq@v3

      - name: developer-portal.json einlesen und Umgebung prüfen
        id: get-json-content
        run: |
          if [ -f ./.github/${{ inputs.component }}-developer-portal.json ]; 
          then
            FILE_CONTENT=$(cat ./.github/${{ inputs.component }}-developer-portal.json)
            ENVIRONMENTS=$(echo $FILE_CONTENT | jq -r '.environments | join(", ")')
          
            # Prüft, ob für ${{ inputs.environment }} ein Upload erfolgen soll
            if [[ "$ENVIRONMENTS" == *"${{ inputs.environment }}"* ]]; 
            then
              {
                echo 'JSON_RESPONSE<<EOF'
                echo $FILE_CONTENT
                echo EOF
              } >> "$GITHUB_OUTPUT"
            else
              # empty Response = kein Upload
              echo "JSON_RESPONSE=" >> "$GITHUB_OUTPUT" 
            fi
          else
            # empty Response = kein Upload
            echo "JSON_RESPONSE=" >> "$GITHUB_OUTPUT" 
          fi

    outputs:
      json: ${{ steps.get-json-content.outputs.JSON_RESPONSE }}

  init-matrix-upload:
    needs: [prepare-matrix]
    if: ${{ needs.prepare-matrix.outputs.json != '' }}
    strategy:
      matrix:
        api: ${{ fromJSON(needs.prepare-matrix.outputs.json).apis }}
    name: "${{ toJSON(matrix.api.matrix.component[0]) }}"
    uses: ./.github/workflows/developer-portal-internal.yml
    secrets: inherit
    with:
      component: "${{ inputs.component }}"
      environment: "${{ inputs.environment }}"
      componentVersion: "${{ inputs.componentVersion }}"
      actionsRepositoryBranch: "${{ inputs.actionsRepositoryBranch }}"
      api: "${{ toJSON(matrix.api.matrix) }}"
