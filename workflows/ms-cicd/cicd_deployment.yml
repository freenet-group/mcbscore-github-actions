#
# Generated by repo  / workflow Distribute from file workflows/ms/deployment_dev.yml
#
name: CICD Deployment
#Name für den workflow. Wichtig bei mehreren workflows im selben Repository um die workflows im actions-tab unterscheiden zu können.
run-name: CICD Deployment ${{ github.ref_name }}

on:
  release:
    types: [released]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: AWS Secrets einlesen
        uses: ./.github/actions/read-aws-secrets
        with:
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          awsParameterPairs: |
            /github/secrets/mcbs_token = TOKEN

      - name: workflow.properties einlesen
        shell: bash
        run: |
          cat ./.github/workflow.properties >> $GITHUB_ENV

      - name: Deployment Workflow starten
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deployment
          token: ${{ env.TOKEN }}
          inputs: >
            {
              "environment": "dev",
              "component": "${{ env.COMPONENT }}", 
              "componentVersion": "${{ github.ref_name }}"
            }

      - name: Kubernetes Deployment Workflow starten
        if: hashFiles('**/deployment_k8s.yml')
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: K8s Deployment
          token: ${{ env.TOKEN }}
          inputs: >
            {
              "environment": "dev",
              "component": "${{ env.COMPONENT }}",
              "componentVersion": "${{ github.ref_name }}",
              "dryRun": "false"
            }

      - name: Developer Portal Upload starten
        if: hashFiles('**/developerPortal.yml')
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: DeveloperPortal Upload
          token: ${{ env.TOKEN }}
          inputs: >
            {
              "environment": "dev",
              "component": "${{ env.COMPONENT }}",
              "componentVersion": "${{ github.ref_name }}"
            }