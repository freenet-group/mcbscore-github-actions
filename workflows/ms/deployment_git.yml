name: GIT Deployment

# Kontrolliert, welche Events die Action auslösen
on:
  workflow_dispatch:
    inputs:
      additionalDeploymentComponent:
        description: 'Ermöglicht Deployment unter anderem Namen'
        required: false
      componentVersion:
        description: 'Die Version der Komponente'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ##################################################################################
      # AWS Secrets
      # ##################################################################################

      # Secrets aus AWS auslesen
      - name: Read and set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-central-1'

      - name: Read AWS Parameters
        uses: dkershner6/aws-ssm-getparameters-action@v1
        with:
          parameterPairs: |
            /github/secrets/mcbs_token = TOKEN

      # Repository auschecken unter $GITHUB_WORKSPACE
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Build Properties einlesen
      - name: Read build.properties
        shell: bash
        run: |
          cat ./.github/build.properties >> $GITHUB_ENV

      # Starte Deployment auf GIT
      - name: Invoke deployment workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deployment
          token: ${{ env.TOKEN }}
          inputs: '{ "component": "${{ env.COMPONENT }}", "environment": "git", "componentVersion": "${{ github.event.inputs.componentVersion }}", "additionalDeploymentComponent": "${{ github.event.inputs.additionalDeploymentComponent }}" }'

      # Starte Deployment auf K8S
      - name: Invoke kubernetes workflow
        if: ${{ hashFiles('**/deployment_k8s.yml') != '' && github.event.inputs.additionalDeploymentComponent == '' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: K8s Deployment
          token: ${{ env.TOKEN }}
          inputs: |
            { "component": "${{ env.COMPONENT }}"
            , "environment": "git"
            , "componentVersion": "${{ github.event.inputs.componentVersion }}"
            , "dryRun": "false" }

      # Starte Developer Portal Upload
      - name: Invoke developer portal upload workflow
        if: ${{ hashFiles('**/developerPortal.yml') != '' && github.event.inputs.additionalDeploymentComponent == '' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: DeveloperPortal Upload
          token: ${{ env.TOKEN }}
          inputs: '{ "component": "${{ env.COMPONENT }}", "environment": "git", "componentVersion": "${{ github.event.inputs.componentVersion }}" }'