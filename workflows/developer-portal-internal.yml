name: Callable DeveloperPortal Upload Workflow

on:
  workflow_call:
    inputs:
      component:
        description: Der Name der Komponente
        type: string
        required: true
      componentVersion:
        description: Die Version der Komponente
        type: string
        required: true
      tagPrefix:
        description: Der Präfix des Tags
        type: string
        required: false
      environment:
        description: Die Zielumgebung
        type: string
        required: true
      actionsRepositoryBranch:
        description: Zu benutzender Branch des Repositories mcbscore-github-actions
        type: string
        required: false
        default: main
      api:
        description: JSON Struktur mit der Matrix für den Upload
        type: string
        required: true
      apiIds:
        description: JSON Struktur mit den API Ids
        type: string
        required: true

jobs:
  developerPortalUpload:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: ${{ fromJSON(inputs.api).type }}
        version: ${{ fromJSON(inputs.api).version }}
        component: ${{ fromJSON(inputs.api).component }}
    name: ${{ matrix.component }}-${{ matrix.type }}-${{ matrix.version }}
    env:
      ACTIONS_REPOSITORY: freenet-group/mcbscore-github-actions
      ACTIONS_PATH: mcbscore/github

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read AWS Secrets
        uses: ./.github/actions/read-aws-secrets
        with:
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          awsParameterPairs: |
            /github/secrets/mcbs_token = TOKEN, 
            /github/secrets/${{ inputs.environment }}/mcbs_app.client_id_sts = CLIENT_ID_STS,
            /github/secrets/${{ inputs.environment }}/mcbs_app.client_secret_sts = CLIENT_SECRET_STS

      # Die internen Actions auschecken
      - name: checkout mcbscore-github-actions
        uses: actions/checkout@v4
        with:
          repository: ${{ env.ACTIONS_REPOSITORY }}
          token: ${{ env.TOKEN }}
          path: ${{ env.ACTIONS_PATH }}
          ref: ${{ github.event.inputs.actionsRepositoryBranch }}

      # ##################################################################################
      # Initialize Workflow
      # ##################################################################################
      - name: Initialize Workflow
        uses: ./mcbscore/github/actions/init-workflow
        with:
          installJq: true
          installNodeJs: true

      - name: Download Public API
        if: ${{ matrix.type == 'open-api' }}
        uses: ./mcbscore/github/actions/download-release-assets
        with:
          version: ${{ github.event.inputs.tagPrefix }}${{ github.event.inputs.componentVersion }}
          assetPattern: '${{ matrix.component }}_client_${{ matrix.version }}_${{ inputs.environment }}.yaml'
          targetPath: './apiDoc'
          token: ${{ env.TOKEN }}

      - name: Download System API
        if: ${{ matrix.type == 'system-api' }}
        uses: ./mcbscore/github/actions/download-release-assets
        with:
          version: ${{ github.event.inputs.tagPrefix }}${{ github.event.inputs.componentVersion }}
          assetPattern: '${{ matrix.component }}_system_${{ matrix.version }}_${{ inputs.environment }}.yaml'
          targetPath: './apiDoc'
          token: ${{ env.TOKEN }}

      - name: get API-ID and API-Path
        run: |
          apiId=${{ fromJSON(inputs.apiIds)[format('{0}-{1}', matrix.type, matrix.version)] }}
          echo "API_ID=$apiId" >> "$GITHUB_ENV"

          if [[ "${{ matrix.type }}" == "open-api" ]]; then
            apiPath=./apiDoc/${{ matrix.component }}_client_${{ matrix.version }}_${{ inputs.environment }}.yaml
          else
            apiPath=./apiDoc/${{ matrix.component }}_system_${{ matrix.version }}_${{ inputs.environment }}.yaml
          fi

          echo "API_PATH=$apiPath" >> "$GITHUB_ENV"

      # API ins Portal hochladen
      - name: Publish API Spec
        if: env.API_PATH != ''
        uses: freenet-group/developer-portal-actions/upload-api-spec@v2
        with:
          openAPIPath: ${{ env.API_PATH }}
          apiId: ${{ env.API_ID }}
          tag: ${{ github.event.inputs.componentVersion }}
          clientId: ${{ env.CLIENT_ID_STS }}
          clientSecret: ${{ env.CLIENT_SECRET_STS }}
          environment: ${{ github.event.inputs.environment }}
          maturityLevel: ${{ matrix.type }}