name: K8s Deployment
#Name fuer den workflow. Wichtig bei mehreren workflows im selben Repository um die workflows im actions-tab unterscheiden zu koennen.
run-name: K8s ${{ github.event.inputs.environment }} Deployment ${{ github.event.inputs.componentVersion }} dry=${{ github.event.inputs.dryRun }}

on:
  workflow_dispatch:
    inputs:
      componentVersion:
        description: Die Version der Komponente
        required: true
      environment:
        description: Die Zielumgebung
        required: true
      timeout:
        description: Zeit, nach der das Helm Deployment zur√ºckgerollt wird, wenn noch nicht erfolgreich
        required: false
        default: 3m30s
      deploymentRepositoryBranch:
        description: Branch von Repository ms-deployment, der benutzt werden soll
        required: false
        default: main
      dryRun:
        type: boolean
        description: Nicht deployen, nur Helm Chart Ergebnis anzeigen (helm --dry-run)
        required: false
        default: false

jobs:
  helm-deployment:
    runs-on: [self-hosted, k8s]
    env:
      COMPONENT: metis-ui
      DEPLOYMENT_PATH: mcbscore/deployment

    steps:
      # Leeren Workspace sicherstellen
      - name: Ensure clean workspace
        run: |
          echo "Cleaning up previous run"
          chown -R "$(id -u):$(id -g)" . || true
          # verstecke Dateien auch entfernen 
          # https://askubuntu.com/questions/740805/how-can-i-remove-all-files-from-current-directory-using-terminal
          shopt -s dotglob
          rm -rf *

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Select Github Secrets for AWS
        uses: ./.github/actions/select-aws-github-secrets
        with:
          environment: ${{ inputs.environment }}
          awsAccessKeyId:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          awsAccessKeyIdProd: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          awsSecretAccessKey:     ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          awsSecretAccessKeyProd: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}

      - name: Read AWS Secrets
        uses: ./.github/actions/read-aws-secrets
        with:
          awsAccessKeyId: ${{ env.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ env.AWS_SECRET_ACCESS_KEY }}
          awsParameterPairs: |
            /github/secrets/mcbs_token = GITHUB_TOKEN

      # Auschecken des Deployment Repositories
      - name: Checkout Deployment Data / Scripts
        uses: actions/checkout@v3
        with:
          repository: freenet-group/ms-deployment
          token: ${{ env.GITHUB_TOKEN }}
          path: ${{ env.DEPLOYMENT_PATH }}
          ref: ${{ github.event.inputs.deploymentRepositoryBranch }}

      # jq installieren
      - name: Setup jq
        uses: freenet-actions/setup-jq@v3

      # Haupt-Deployment-Action
      - name: Deploy to K8s
        uses: ./.github/actions/deploy-to-k8s
        with:
          component: ${{ env.COMPONENT }}
          componentVersion: ${{ inputs.componentVersion }}
          environment: ${{ inputs.environment }}
          dryRun: ${{ inputs.dryRun }}
          timeout: ${{ inputs.timeout }}
          maxWaitForDeployment: ${{ inputs.maxWaitForDeployment }}
          deploymentPath: ${{ env.DEPLOYMENT_PATH }}
          awsAccessKeyId: ${{ env.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Cleanup
        if: ${{ always() }}
        run: |
          set +e
          rm -rf /__w/_tool/*
