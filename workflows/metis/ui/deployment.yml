name: Deployment

on:
  workflow_dispatch:
    inputs:
      componentVersion:
        description: Die Version der Komponente
        required: true
      host:
        description: Der Zielhost
        required: true
      apiUrl:
        description: Die URL der METIS API
        required: true
      actionsRepositoryBranch:
        description: Zu benutzender Branch des Repositories mcbscore-github-actions
        required: false
        default: main

jobs:
  deploy:
    # self-hosted Runner für die Steps benutzen, um Zugriff auf MD Systeme zu haben
    runs-on: [self-hosted, vm]
    env:
      ACTIONS_REPOSITORY: freenet-group/mcbscore-github-actions
      ACTIONS_PATH: mcbscore/github

    steps:
      # Owner für alle Dateien des $GITHUB_WORKSPACE auf den Runner User setzen
      - name: Change Owner to Runner User
        if: ${{ always() }}
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GH_R_PACKAGES }}
          docker run --rm -v `pwd`:/target -w /target -t ghcr.io/freenet-group/container-base-images/ubuntu_2004_lts:latest sh -c "chown $(id -u):$(id -g) -R /target"

      # Leeren Workspace sicherstellen
      - name: Ensure clean workspace
        run: |
          echo "Cleaning up previous run"
          rm -rf -- *

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Read AWS Secrets
        uses: ./.github/actions/read-aws-secrets
        with:
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          awsParameterPairs: |
            /github/secrets/mcbs_token = TOKEN,
            /github/secrets/checkmk_user = CHECKMK_USER,
            /github/secrets/checkmk_password = CHECKMK_PW,
            /github/secrets/metis_deployment_user = DEPLOYMENT_USER,
            /github/secrets/metis_deployment_user_ssh_key = DEPLOYMENT_USER_SSH_KEY

      # Die internen Actions auschecken
      - name: checkout mcbscore-github-actions
        uses: actions/checkout@v3
        with:
          repository: ${{ env.ACTIONS_REPOSITORY }}
          token: ${{ env.TOKEN }}
          path: ${{ env.ACTIONS_PATH }}
          ref: ${{ github.event.inputs.actionsRepositoryBranch }}

      # ##################################################################################
      # Initialize Workflow
      # ##################################################################################

      - name: Initialize Workflow
        uses: ./mcbscore/github/actions/init-workflow
        with:
          installJq: true
          installNodeJs: true

      - name: Download Release
        id: downloadRelease
        uses: ./mcbscore/github/actions/download-release-assets
        with:
          version: ${{ github.event.inputs.componentVersion }}
          assetPattern: metis-ui-${{ github.event.inputs.componentVersion }}.tar.gz
          targetPath: ./release
          token: ${{ env.TOKEN }}

      # Release kopieren und entpacken
      - name: Copy release
        shell: bash
        run: |
          echo "${{ env.DEPLOYMENT_USER_SSH_KEY }}" > id_rsa
          chmod 600 ./id_rsa
          scp -r -i ./id_rsa ./release/metis-ui-${{ github.event.inputs.componentVersion }}.tar.gz ${{ env.DEPLOYMENT_USER }}@${{ github.event.inputs.host }}:/tmp/metis-ui-${{ github.event.inputs.componentVersion }}.tar.gz

      - name: Extract release
        shell: bash
        run: |
          ssh -i ./id_rsa ${{ env.DEPLOYMENT_USER }}@${{ github.event.inputs.host }} "\
          set -e && \
          tar xfvz /tmp/metis-ui-${{ github.event.inputs.componentVersion }}.tar.gz --directory /home/www/default/htdocs"

      # config.json anlegen
      - name: Create and deploy config.json
        shell: bash
        run: |
          echo "{" > config.json
          echo -e "    \"API_URL\": \"${{ github.event.inputs.apiUrl }}\"," >> config.json
          echo -e "    \"DEBUG_INFO\" : false" >> config.json
          echo "}" >> config.json
          scp -r -i ./id_rsa ./config.json ${{ env.DEPLOYMENT_USER }}@${{ github.event.inputs.host }}:/home/www/default/htdocs/config.json

      # Apache restart
      - name: Apache restart
        shell: bash
        run: |
          ssh -i ./id_rsa ${{ env.DEPLOYMENT_USER }}@${{ github.event.inputs.host }} "\
          set -e && \
          sudo /etc/init.d/apache2 start"
          rm -f ./id_rsa
