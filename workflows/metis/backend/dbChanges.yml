name: DB Changes

on:
  workflow_dispatch:
    inputs:
      component:
        description: Der Name der Komponente
        required: true
      componentVersion:
        description: Die Version der Komponente
        required: true
      tagPrefix:
        description: Der PrÃ¤fix des Tags
        required: false
      dbChangesRepositoryBranch:
        description: Zu benutzender Branch des Repositories mcbscore_db-changes
        required: false
        default: main

jobs:
  copyChanges:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: source
          ref: sql-${{ github.event.inputs.tagPrefix }}${{ github.event.inputs.componentVersion }}

      - name: Read AWS Secrets
        uses: ./source/.github/actions/read-aws-secrets
        with:
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          awsParameterPairs: |
            /github/secrets/mcbs_token = TOKEN

      - name: DB Changes Repository auschecken
        uses: actions/checkout@v4
        with:
          repository: freenet-group/mcbscore_db-changes
          token: ${{ env.TOKEN }}
          path: target
          ref: ${{ github.event.inputs.dbChangesRepositoryBranch }}

      # Workflow Properties einlesen
      - name: Read workflow.properties
        shell: bash
        run: |
          cat ./source/.github/workflow.properties >> $GITHUB_ENV

      - name: DB Changes kopieren
        shell: bash
        run: |
          
          cp -Rv source/${{ env.DB_CHANGES_BASE_DIRECTORY }}${{ env.DB_CHANGES_DIRECTORY }}/* target/${{ github.event.inputs.component }}/${{ env.DB_CHANGES_DIRECTORY }}
          
          cd target
          git config user.name github-actions
          git config user.email github-actions@github.com

          changesDetected=`git status --porcelain`

          if [ -n "$changesDetected" ]
          then
            git add .
            git commit -m "[Releasebuild] db-changes ${{ github.event.inputs.tagPrefix }}${{ github.event.inputs.componentVersion }}"
            git push
          fi

          git tag -f -a sql-${{ github.event.inputs.tagPrefix }}${{ github.event.inputs.componentVersion }} -m "tagging sql-${{ github.event.inputs.tagPrefix }}${{ github.event.inputs.componentVersion }}"
          git push --tags -f