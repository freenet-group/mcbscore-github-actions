name: "Test-Datenbank löschen und initialisieren"

on:
  workflow_dispatch:
    inputs:
      componentVersion:
        description: Die Version der Komponente
        required: true
      environment:
        description: Die Zielumgebung
        required: true
        type: choice
        options:
          - "dev (=> Datenbank wie im dev Profil konfiguriert)"
          - "testauto (=> temporäre Datenbank; zum Workflow testen)"
      loadTestData:
        description: nach dem Zurücksetzen der Datenbank Testdaten einspielen
        type: boolean
        required: false
        default: false
      actionsRepositoryBranch:
        description: Zu benutzender Branch des Repositories mcbscore-github-actions
        type: string
        required: false
        default: main

jobs:
  run:
    runs-on: [self-hosted, vm]
    name: "run: ${{ toJSON(inputs) }}"
    env:
      ACTIONS_REPOSITORY: freenet-group/mcbscore-github-actions
      ACTIONS_PATH: mcbscore/github
      REPOSITORY_PATH: repository

    steps:
      - name: Change Owner to Runner User
        if: ${{ always() }}
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GH_R_PACKAGES }}
          docker run --rm -v "$(pwd):/target" -w /target -t ghcr.io/freenet-group/container-base-images/ubuntu_2004_lts:latest sh -c "chown $(id -u):$(id -g) -R /target"

      - name: Ensure clean workspace
        run: |
          echo "Cleaning up previous run"
          rm -rf *

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: ${{ env.REPOSITORY_PATH }}

      - name: Read AWS Secrets
        uses: ./repository/.github/actions/read-aws-secrets
        with:
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          awsParameterPairs: |
            /github/secrets/mcbs_token = TOKEN

      - name: checkout mcbscore-github-actions
        uses: actions/checkout@v3
        with:
          token: ${{ env.TOKEN }}
          repository: ${{ env.ACTIONS_REPOSITORY }}
          path: ${{ env.ACTIONS_PATH }}
          ref: ${{ inputs.actionsRepositoryBranch }}

      - name: Initialize Workflow
        uses: ./mcbscore/github/actions/init-workflow
        with:
          lookupBasePath: ${{ env.REPOSITORY_PATH }}
          installJq: true
          installJava: true

      # Inputs zu handlichen Variablen umwandeln
      - name: Setup variables
        env:
          GH_INPUT_ENV: ${{ inputs.environment }}
        shell: bash
        run: |
          prof=${GH_INPUT_ENV%%(*}    # ab erster Klammer abschneiden
          prof=${prof//[[:space:]]/}  # trimmen
          printf '%s=%s\n' SPRING_PROFILE "$prof" | tee -a -- "$GITHUB_ENV"

      - name: Download release
        uses: ./mcbscore/github/actions/download-release-assets
        with:
          version: ${{ env.TAG_PREFIX }}${{ inputs.componentVersion }}
          assetPattern: metis-shell-${{ inputs.componentVersion }}.jar
          targetPath: ./release
          token: ${{ env.TOKEN }}

      - name: Start metis-shell
        shell: bash
        env:
          LOAD_TEST_DATA: ${{ inputs.loadTestData }}
          REPOSITORY_PATH: ${{ env.REPOSITORY_PATH }}
          RELEASE_PATH: release
          COMPONENT_VERSION: ${{ inputs.componentVersion }}
          SPRING_PROFILE: ${{ env.$SPRING_PROFILE }}
        run: |
          # Datei ausfuehrbar machen
          chmod +x ./${{ env.ACTIONS_PATH }}/workflows/metis/common/database-init.sh

          ./${{ env.ACTIONS_PATH }}/workflows/metis/common/database-init.sh
