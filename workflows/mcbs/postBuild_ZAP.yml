#
# Generated by repo freenet-group/mcbscore_workflows / workflow Distribute from file workflows/mcbs/postBuild_ZAP.yml
#
name: PostBuild ZAP

# Workflow-Steuerung
on:
  workflow_dispatch:
    inputs:
      component:
        description: 'Die Komponente im Sprachgebrauch'
        required: false
        default: mcbsserv
      releaseVersion:
        description: 'Die Release Version'
        required: true
      issueList:
        description: 'Die Liste der integrierten JIRA-Issues'
        required: true
      epic:
        description: Das EPIC (JIRA) als Releaseklammer (META-170 = "unbestimmt")
        required: false
        default: META-170

jobs:
  postBuild:
    # self-hosted Runner für den Systeminternen Zugriff
    runs-on: [self-hosted,vm]
    env:
      TEAMS_MAIL: 3e0e2102.freenetgroup.onmicrosoft.com@emea.teams.ms
      TEAMS_WEBHOOK: https://freenetgroup.webhook.office.com/webhookb2/f8549d95-1549-442e-a3a6-2e35030173b4@7d95deb3-0bca-4c9d-a61e-1fd6c47ed60c/IncomingWebhook/3173e226403c4fb58231ce63e9a41246/ca24e4e3-cb4c-4259-a58d-fca357c5e7cf

    steps:
      # Owner für alle Dateien des $GITHUB_WORKSPACE auf den Runner User setzen
      - name: Change Owner to Runner User
        if: ${{ always() }}
        run: |
          docker run --rm -v `pwd`:/target -w /target -t docker-base.mobilcom.de/ubuntu/ubuntu_1804_lts:latest sh -c "chown $(id -u):$(id -g) -R /target"
      # Leeren Workspace sicherstellen
      - name: Ensure clean workspace
        run: |
          echo "Cleaning up previous run"
          rm -rf *
          
      # ##################################################################################
      # Parameter
      # ##################################################################################    
      - name: Show Params
        run: |
          echo "####################"
          echo "Job-Parameter :"   
          echo "####################"
          echo "Komponente : ${{ github.event.inputs.component }} "
          echo "Release-Version :  ${{ github.event.inputs.releaseVersion }}"
          echo "Issues : ${{ github.event.inputs.issueList }}"
          echo "EPIC :  ${{ github.event.inputs.epic }}"       
          
      # ##################################################################################
      # AWS Secrets
      # ##################################################################################

      # Secrets aus AWS auslesen
      - name: Read and set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-central-1'

      - name: Read AWS Parameters
        uses: dkershner6/aws-ssm-getparameters-action@v1
        with:
          parameterPairs: |
            /github/secrets/mcbs_token = TOKEN,
            /github/secrets/mcbstest_credentials = MCBSTEST_CREDENTIALS,
            /github/common/JIRA_URL = JIRA_URL, 
            /github/common/JIRA_URL2 = JIRA_URL2 
      # Repository auschecken unter $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Checkout atldevtools (main) in ./devtools
      - name: checkout atldevtools
        uses: actions/checkout@v2
        with:
          repository: 'freenet-group/atldevtools'
          token: ${{ env.TOKEN }}
          path: 'devtools'

      # Die internen Actions auschecken
      - name: checkout mcbscore actions
        uses: actions/checkout@v2
        with:
          repository: freenet-group/mcbscore_actions
          token: ${{ env.TOKEN }}
          path: mcbscore/actions
          ref: main

      # ##################################################################################
      # Properties
      # ##################################################################################

      # Build Properties einlesen
      - name: Read build.properties
        shell: bash
        run: |
          cat ./.github/zap_build.properties >> $GITHUB_ENV
      # ##################################################################################
      # JAVA
      # ##################################################################################

      # Java / JDK initialisieren
      - name: Setup Java JDK
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: ${{ env.JAVA_VERSION }}

      # ##################################################################################
      # Auslesen und Bereitstellen des Inbetriebnahmedatums in ibn.properties
      # ##################################################################################
      - name: IBNDate
        id: fetch_ibn-date
        run: |
          if [ ${{ github.event.inputs.epic }} == "META-170" ];
          then
            echo "170 :: unbestimmt"
            echo "IBN-Date=unbestimmt" >> ibn.properties
            
          else
            echo "Datum holen !"
            java -Dlog4j.configuration=./log4j_info.properties  -cp devtools/apps/atltools/AtlassianDeveloperTools-all-1.21.0.jar:.:devtools/apps/atltools/AtlassianDeveloperTools  meta_issue.GetIBNDateKt "${{ env.JIRA_URL }}" "${{ env.MCBSTEST_CREDENTIALS }}" "${{ github.event.inputs.epic }}"
          fi
                  
      # IBN-Datum auslesen (Nutzung via ${{ steps.read_ibn-date.outputs.value }} )
      - name: Read Date
        id: read_ibn-date
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './ibn.properties'
          property: 'IBN-Date'


      # ##################################################################################
      # Erzeugen von Version / ComponentVersion in JIRA
      # ##################################################################################
      - name: jiraConfig-ABRMS
        id: jC-ABRMS
        uses: ./mcbscore/actions/jiraConfig
        with:
          JIRA_URL: ${{ env.JIRA_URL }}
          JIRA_URL2: ${{ env.JIRA_URL2 }}
          JIRA_CREDENTIALS: ${{ env.MCBSTEST_CREDENTIALS }}
          JIRA_PROJECT: ABRMS
          JIRA_COMPONENT: ${{ env.COMPONENT }}
          JIRA_VERSION: ${{ github.event.inputs.releaseVersion }}
          COMPONENT_LIST: "${{ env.JIRA_COMPONENT }}"
          ATLASSIAN_DEVELOPER_TOOLS: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}
          LOGLEVEL: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_LOGLEVEL }}

      - name: jiraConfig-MCBS
        id: jC-MCBS
        uses: ./mcbscore/actions/jiraConfig
        with:
          JIRA_URL: ${{ env.JIRA_URL }}
          JIRA_URL2: ${{ env.JIRA_URL2 }}
          JIRA_CREDENTIALS: ${{ env.MCBSTEST_CREDENTIALS }}
          JIRA_PROJECT: 'MCBS'
          JIRA_COMPONENT: ${{ env.COMPONENT }}
          JIRA_VERSION: ${{ github.event.inputs.releaseVersion }}
          COMPONENT_LIST: "${{ env.JIRA_COMPONENT }},Microservices"
          ATLASSIAN_DEVELOPER_TOOLS: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}
          LOGLEVEL: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_LOGLEVEL }}

      # ##################################################################################
      # Erzeugen einer CSV-Datei mit ergänzenden Issue-Infos
      # ##################################################################################
      - name: fetchIssueInfos
        id: fI
        uses: ./mcbscore/actions/fetchIssueInfos
        with:
          JIRA_URL: ${{ env.JIRA_URL }}
          JIRA_CREDENTIALS: ${{ env.MCBSTEST_CREDENTIALS }}
          ISSUES: ${{ github.event.inputs.issueList }}
          ATLASSIAN_DEVELOPER_TOOLS: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}
          LOGLEVEL: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_LOGLEVEL }}

     
      # ##################################################################################
      # Eintrag der fixVersion
      # ##################################################################################
      - name: setFixVersions
        id: sF
        uses: ./mcbscore/actions/setFixVersion
        with:
          JIRA_URL: ${{ env.JIRA_URL }}
          JIRA_CREDENTIALS: ${{ env.MCBSTEST_CREDENTIALS }}
          COMPONENT:  ${{ env.COMPONENT }}
          VERSION: ${{ github.event.inputs.releaseVersion }}
          ISSUES: ${{ github.event.inputs.issueList }}
          ATLASSIAN_DEVELOPER_TOOLS: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}
          LOGLEVEL: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_LOGLEVEL }}

      # ##################################################################################
      # set Issues "done"
      # ##################################################################################
      - name: setIssueListDone
        id: sD
        uses: ./mcbscore/actions/setIssueListDone
        with:
          JIRA_URL: ${{ env.JIRA_URL }}
          JIRA_CREDENTIALS: ${{ env.MCBSTEST_CREDENTIALS }}
          ISSUES: ${{ github.event.inputs.issueList }}
          ATLASSIAN_DEVELOPER_TOOLS: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}
          LOGLEVEL: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_LOGLEVEL }}

      # ##################################################################################
      # Setzen eines Build-Kommentars an den Issues
      # ##################################################################################
      - name: setIssueComments
        id: sC
        uses: ./mcbscore/actions/setIssueComments
        with:
          JIRA_URL: ${{ env.JIRA_URL }}
          JIRA_CREDENTIALS: ${{ env.MCBSTEST_CREDENTIALS }}
          COMMENT: 'Releasebuild : ${{ env.COMPONENT }}_${{ github.event.inputs.releaseVersion }}'
          ISSUES: ${{ github.event.inputs.issueList }}
          ATLASSIAN_DEVELOPER_TOOLS: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}
          LOGLEVEL: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_LOGLEVEL }}

      # ##################################################################################
      # Erzeugen einer Releasenote im WIKI
      # ##################################################################################
      # GitHub-WIKI auschecken
      # Parallel dazu das Wiki-Repository in ein anderes Verzeichnis ("markdown" auschecken
      - name: Checkout wiki code
        uses: actions/checkout@v2
        with:
          repository: ${{github.repository}}.wiki
          path: markdown

      # Aufruf der Action
      - name: createMCBSServicesReleasenote
        id: cR
        uses: ./mcbscore/actions/createMCBSServicesReleasenote
        with:
          JIRA_URL: ${{ env.JIRA_URL }}
          JIRA_CREDENTIALS: ${{ env.MCBSTEST_CREDENTIALS }}
          ISSUES: ${{ github.event.inputs.issueList }}  
          COMPONENT:  MCBSServices
          REPO: ${{ github.REPOSITORY }}
          RELEASE: "${{ github.SERVER_URL }}/${{ github.REPOSITORY }}/releases/tag/${{ env.TAG_PREFIX }}${{ github.event.inputs.releaseVersion }}"
          VERSION: ${{ github.event.inputs.releaseVersion }}
          ATLASSIAN_DEVELOPER_TOOLS: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}
          LOGLEVEL: info
          EPIC: ${{ github.event.inputs.epic }}
          JAVA-Version: ${{ env.RELEASENOTES_JAVA_RELEASE }}

      # ###################################################################################
      # Teams-Notification
      # ###################################################################################
      - name: Notification
        id: createNotificationTable
        run: |
          tabelle="<ul>"
          while IFS= read -r line; do
            # echo "| [$(echo $line | cut -d";" -f1 )](https://jira.freenet-group.de/browse/$(echo $line | cut -d";" -f1 ) )  | $(echo $line | cut -d";" -f2 ) | $(echo $line | cut -d";" -f3 ) | $(echo $line | cut -d";" -f6 ) | $(echo $line | cut -d";" -f4 ) | $(echo $line | cut -d";" -f8 ) | $(echo $line | cut -d";" -f9 )" >> $release.md
            tabelle=${tabelle}"<li>$(echo $line | cut -d";" -f1 ) :: $(echo $line | cut -d";" -f2 ) </li>"
          done < issue_info.csv
          tabelle=${tabelle}"</ul>"
          echo "${tabelle}"
          echo "tabelle=${tabelle}" >> $GITHUB_ENV
      - name: Send notification as mail
        id: sM2
        uses: ./mcbscore/actions/sendMail2
        with:
          COMPONENT:  MCBSServices
          VERSION: ${{ github.event.inputs.releaseVersion }}
          IBN: ${{ steps.read_ibn-date.outputs.value }}  
          # ISSUES: ${{ github.event.inputs.issueList }}
          ISSUES: issue_info.csv
          SQL: '%'
          CONFIG: '%'
          DEPENDENCIES: '%'
          EXTRA: "extra"
          EPIC: ${{ github.event.inputs.epic }}
          WEBHOOK_URI: ${{ env.TEAMS_MAIL }}
          TEMPLATE: "B_MS.ftl"
          LOGLEVEL: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_LOGLEVEL }}
          ATLASSIAN_DEVELOPER_TOOLS: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}
          REPO: ${{ github.REPOSITORY }}

      # ##################################################################################
      # Update der referenced issues
      # ##################################################################################
      # Aufruf der Action
      - name: updateReferencedIssues
        id: updateReferencedIssues
        uses: ./mcbscore/actions/updateReferencedIssues
        with:
          JIRA_URL: ${{ env.JIRA_URL }}
          JIRA_CREDENTIALS: ${{ env.MCBSTEST_CREDENTIALS }}
          COMPONENT:  ${{ env.COMPONENT }}
          VERSION: ${{ github.event.inputs.releaseVersion }}
          ISSUES: ${{ github.event.inputs.issueList }}
          ATLASSIAN_DEVELOPER_TOOLS: ${{ env.ATLDEVTOOLS }}
          LOGLEVEL: ${{ env.LOGLEVEL }}
          
      # ##################################################################################
      # Issue zur BE-Integration
      # ##################################################################################
      - name: createBE-Issue
        id: cB
        uses: ./mcbscore/actions/createBE-Issue
        with:
          JIRA_URL: ${{ env.JIRA_URL }}
          JIRA_CREDENTIALS: ${{ env.MCBSTEST_CREDENTIALS }}
          COMPONENT: ${{ env.COMPONENT }}
          VERSION: ${{ github.event.inputs.releaseVersion }}
          ATLASSIAN_DEVELOPER_TOOLS: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}
          LOGLEVEL: ${{ env.LOGLEVEL }}
          DBCHANGES: '%'
          EPIC: ${{ github.event.inputs.epic }}
          RELNOTE: https://github.com/${{ github.REPOSITORY }}/wiki/MCBSServices_${{ github.event.inputs.releaseVersion }}
