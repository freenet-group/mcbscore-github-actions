name: MCBS-Freigabe

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: Die Release-Version
        required: true
      epic:
        description: Das EPIC (JIRA) als Releaseklammer (META-170 = "unbestimmt")
        required: false
        default: META-170
      iterations:
        description: Die beinhalteten Iterationen (MCBS_93.0.0, MCBS_93.0.1)
        required: true
      logLevel:
        description: Das LogLevel der innerhalb der Action ablaufenden AtlassianDeveloperTools
        required: false
        default: info

jobs:
  mcbsFreigabe:
    # self-hosted Runner f端r die Steps benutzen, um Zugriff auf MD Systeme zu haben
    runs-on: [self-hosted, vm]
    name: "mcbsFreigabe: ${{ toJSON(inputs) }}"
    env:
      ACTIONS_REPOSITORY: freenet-group/mcbscore-github-actions
      ACTIONS_PATH: mcbscore/github
      COMPONENT: mcbs
      TEAMS_MAIL:  76890356.freenetgroup.onmicrosoft.com@emea.teams.ms

    steps:
      - name: Show Params
        run: echo '${{ toJSON(inputs) }}'

      # Owner f端r alle Dateien des $GITHUB_WORKSPACE auf den Runner User setzen
      - name: Change Owner to Runner User
        if: ${{ always() }}
        run: |
          githubUser='${{ github.actor }}'
          githubToken='${{ secrets.GH_R_PACKAGES }}'
          docker login ghcr.io -u "$githubUser" -p "$githubToken"
          docker run --rm -v "$(pwd):/target" -w /target -t ghcr.io/freenet-group/container-base-images/ubuntu_2004_lts:latest sh -c "chown $(id -u):$(id -g) -R /target"

      # Leeren Workspace sicherstellen
      - name: Ensure clean workspace
        run: |
          echo "Cleaning up previous run"
          rm -rf -- *

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Read AWS Secrets
        uses: ./.github/actions/read-aws-secrets
        with:
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          awsParameterPairs: |
            /github/secrets/mcbs_token = TOKEN,
            /github/secrets/mcbstest_credentials = MCBSTEST_CREDENTIALS,
            /github/common/jira/api_url = JIRA_API_URL

      # Die internen Actions auschecken
      - name: checkout mcbscore-github-actions
        uses: actions/checkout@v3
        with:
          repository: ${{ env.ACTIONS_REPOSITORY }}
          token: ${{ env.TOKEN }}
          path: ${{ env.ACTIONS_PATH }}
          ref: ${{ github.event.inputs.actionsRepositoryBranch }}

      # ##################################################################################
      # Initialize Workflow
      # ##################################################################################

      - name: Initialize Workflow
        uses: ./mcbscore/github/actions/init-workflow
        with:
          installJava: true
          configurationPrefix: ${{ env.COMPONENT }}_

      # ###################################################################################
      # EPIC / IBN auswerten
      # ###################################################################################
      - name: IBN Datum ermitteln
        id: determine-going-live-date
        uses: ./mcbscore/github/actions/determine-going-live-date
        with:
          jiraUrl: ${{ env.JIRA_API_URL }}
          jiraCredentials: ${{ env.MCBSTEST_CREDENTIALS }}
          epic: ${{ github.event.inputs.epic }}
          atlassianToolsVersion: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}

      # ##################################################################################
      # Auslesen und Bereitstellen der Issues 端ber alle Iterationen
      # ##################################################################################
      - name: ReleaseIssues
        shell: bash
        run: |
          atlassianToolsDir=./mcbscore/github/atlassian-tools

          java -Dlog4j2.configurationFile="$atlassianToolsDir"/log4j2-${{ inputs.logLevel }}.xml \
            -cp "$atlassianToolsDir"/AtlassianDeveloperTools-all-${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}.jar:.:"$atlassianToolsDir"/AtlassianDeveloperTools \
            release.QueryIssueInfosForReleaseKt \
            "${{ env.JIRA_API_URL }}" \
            "${{ env.MCBSTEST_CREDENTIALS }}" \
            "${{ github.event.inputs.iterations }}"
          cat issueList.txt
          cat releaseIssues.csv

      # ##################################################################################
      # Ermitteln der ZusatzInfos zum Release
      # ##################################################################################
      - name: Fetch Additional Information
        id: fetch-additional-information
        uses: ./mcbscore/github/actions/fetch-additional-information
        with:
          jiraUrl: ${{ env.JIRA_API_URL }}
          jiraCredentials: ${{ env.MCBSTEST_CREDENTIALS }}
          issueList: ${{ github.event.inputs.issueList }}
          atlassianToolsVersion: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}

      # ##################################################################################
      # Mailversand
      # ##################################################################################
      - name: ReleaseMail
        shell: bash
        run: |
          atlassianToolsDir=./mcbscore/github/atlassian-tools

          java -Dlog4j2.configurationFile="$atlassianToolsDir"/log4j2-${{ inputs.logLevel }}.xml \
            -cp "$atlassianToolsDir"/AtlassianDeveloperTools-all-${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}.jar:.:"$atlassianToolsDir"/AtlassianDeveloperTools \
            mail_info.SendReleaseMailKt \
            MCBS \
            "${{ github.event.inputs.releaseVersion }}" \
            "${{ steps.determine-going-live-date.outputs.goingLiveDate }}" \
            "${{ steps.fetch-additional-information.outputs.sql }}" \
            "${{ steps.fetch-additional-information.outputs.dependency }}" \
            "${{ github.event.inputs.iterations }}" \
            "releaseIssues.csv" \
            "${{ env.TEAMS_MAIL }}" \
            "ProdFreigabeMCBSTemplate.ftl"

      # ##################################################################################
      # Freigabestatement auf der Releasenote
      # ##################################################################################
      - name: Checkout wiki code
        uses: actions/checkout@v3
        with:
          repository: ${{github.repository}}.wiki
          path: markdown

      - name: Freigabestatement
        shell: bash
        run: |
          
          cd markdown
          echo "## Produktionsfreigabe: " >> MCBS_${{ github.event.inputs.releaseVersion }}
          echo "Freigabe f端r PROD zum ${{ steps.determine-going-live-date.outputs.goingLiveDate }} am "$(date "+%d.%m.%y") >> MCBS_${{ github.event.inputs.releaseVersion }}
          git add MCBS_${{ github.event.inputs.releaseVersion }}
          git diff-index --quiet HEAD || git commit -m "Freigabe"
          git push