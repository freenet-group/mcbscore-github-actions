#
# Generated by repo freenet-group/mcbscore-github-actions / workflow Distribute from file workflows/mcbs/postBuild_MCBS.yml
#
name: PostBuild MCBS

on:
  workflow_dispatch:
    inputs:
      component:
        description: Die Komponente im Sprachgebrauch
        required: true
      releaseVersion:
        description: Die Release-Version
        required: true
      issueList:
        description: Die Liste der integrierten JIRA-Issues
        required: true
      epic:
        description: Das EPIC (JIRA) als Releaseklammer (META-170 = "unbestimmt")
        required: false
        default: META-170
      actionsRepositoryBranch:
        description: Zu benutzender Branch des Repositories mcbscore-github-actions
        type: string
        required: false
        default: main

jobs:
  postBuild:
    # self-hosted Runner für den Systeminternen Zugriff
    runs-on: [self-hosted, vm]
    name: "postBuild: ${{ toJSON(inputs) }}"
    env:
      ACTIONS_REPOSITORY: freenet-group/mcbscore-github-actions
      ACTIONS_PATH: mcbscore/github
      MAIL_TEMPLATE: B_MCBS.ftl
      TEAMS_MAIL: 3e0e2102.freenetgroup.onmicrosoft.com@emea.teams.ms
#      TEAMS_WEBHOOK: https://freenetgroup.webhook.office.com/webhookb2/f8549d95-1549-442e-a3a6-2e35030173b4@7d95deb3-0bca-4c9d-a61e-1fd6c47ed60c/IncomingWebhook/3173e226403c4fb58231ce63e9a41246/ca24e4e3-cb4c-4259-a58d-fca357c5e7cf

    steps:
      - name: Show Params
        run: echo '${{ toJSON(inputs) }}'

      # Owner für alle Dateien des $GITHUB_WORKSPACE auf den Runner User setzen
      - name: Change Owner to Runner User
        if: ${{ always() }}
        run: |
          githubUser='${{ github.actor }}'
          githubToken='${{ secrets.GH_R_PACKAGES }}'
          docker login ghcr.io -u "$githubUser" -p "$githubToken"
          docker run --rm -v "$(pwd):/target" -w /target -t ghcr.io/freenet-group/container-base-images/ubuntu_2004_lts:latest sh -c "chown $(id -u):$(id -g) -R /target"

      # Leeren Workspace sicherstellen
      - name: Ensure clean workspace
        run: |
          echo "Cleaning up previous run"
          rm -rf -- *

      # Repository auschecken unter $GITHUB_WORKSPACE
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: read-aws-secrets
        name: Read AWS Secrets
        uses: ./.github/actions/read-aws-secrets
        with:
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          awsParameterPairs: |
            /github/secrets/mcbs_token = TOKEN,
            /github/secrets/mcbstest_credentials = MCBSTEST_CREDENTIALS,
            /github/common/jira/api_url = JIRA_API_URL, 
            /github/common/jira/url = JIRA_WEB_URL,
            /github/common/sonar/api_url = SONAR_API_URL,
            /github/common/JIRA_URL2 = JIRA_URL2 

      # Die internen Actions auschecken
      - name: checkout mcbscore-github-actions
        uses: actions/checkout@v3
        with:
          repository: ${{ env.ACTIONS_REPOSITORY }}
          token: ${{ env.TOKEN }}
          path: ${{ env.ACTIONS_PATH }}
          ref: ${{ github.event.inputs.actionsRepositoryBranch }}

      # ##################################################################################
      # Initialize Workflow
      # ##################################################################################
      - name: Initialize Workflow
        uses: ./mcbscore/github/actions/init-workflow
        with:
          installJava: true
          configurationPrefix: ${{ github.event.inputs.component }}_

      # ##################################################################################
      # Erzeugen von Version / ComponentVersion in JIRA
      # ##################################################################################
      - name: jiraConfig-ABRMS
        uses: ./mcbscore/github/actions/jira-configuration
        with:
          jiraUrl: ${{ env.JIRA_API_URL }}
          jiraUrl2: ${{ env.JIRA_URL2 }}
          jiraCredentials: ${{ env.MCBSTEST_CREDENTIALS }}
          jiraProject: ABRMS
          component: ${{ env.COMPONENT }}
          componentVersion: ${{ github.event.inputs.releaseVersion }}
          componentList: ${{ env.JIRA_ABRMS_COMPONENT }}
          atlassianToolsVersion: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}

      - name: jiraConfig-MCBS
        uses: ./mcbscore/github/actions/jira-configuration
        with:
          jiraUrl: ${{ env.JIRA_API_URL }}
          jiraUrl2: ${{ env.JIRA_URL2 }}
          jiraCredentials: ${{ env.MCBSTEST_CREDENTIALS }}
          jiraProject: MCBS
          component: ${{ env.COMPONENT }}
          componentVersion: ${{ github.event.inputs.releaseVersion }}
          componentList: ${{ env.JIRA_MCBS_COMPONENT }}
          atlassianToolsVersion: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}

      # ##################################################################################
      # Erzeugen einer CSV-Datei mit ergänzenden Issue-Infos
      # ##################################################################################
      - name: fetchIssueInfos
        uses: ./mcbscore/github/actions/fetch-issue-information
        with:
          jiraUrl: ${{ env.JIRA_API_URL }}
          jiraCredentials: ${{ env.MCBSTEST_CREDENTIALS }}
          issueList: ${{ github.event.inputs.issueList }}
          atlassianToolsVersion: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}

      # ##################################################################################
      # Eintrag der fixVersion
      # ##################################################################################
      - name: setFixVersions
        uses: ./mcbscore/github/actions/set-fix-version-v2
        with:
          jiraUrl: ${{ env.JIRA_API_URL }}
          jiraCredentials: ${{ env.MCBSTEST_CREDENTIALS }}
          component: ${{ env.JIRA_COMPONENT }}
          included_components: ${{ env.INCLUDED_COMPONENTS }}
          componentVersion: ${{ github.event.inputs.releaseVersion }}
          issueList: ${{ github.event.inputs.issueList }}
          atlassianToolsVersion: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}

      # ##################################################################################
      # set Issues "done"
      # ##################################################################################
      - name: setIssueListDone
        uses: ./mcbscore/github/actions/set-issue-list-done
        with:
          jiraUrl: ${{ env.JIRA_API_URL }}
          jiraCredentials: ${{ env.MCBSTEST_CREDENTIALS }}
          issueList: ${{ github.event.inputs.issueList }}
          atlassianToolsVersion: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}

      # ##################################################################################
      # Setzen eines Build-Kommentars an den Issues
      # ##################################################################################
      - name: setIssueComment
        uses: ./mcbscore/github/actions/set-issue-comment
        with:
          jiraUrl: ${{ env.JIRA_API_URL }}
          jiraCredentials: ${{ env.MCBSTEST_CREDENTIALS }}
          comment: 'Releasebuild : ${{ env.COMPONENT }}_${{ github.event.inputs.releaseVersion }}'
          issueList: ${{ github.event.inputs.issueList }}
          atlassianToolsVersion: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}

      # ##################################################################################
      # Ermitteln der ZusatzInfos zum Release
      # ##################################################################################
      - name: Fetch Additional Information
        id: fetch-additional-information
        uses: ./mcbscore/github/actions/fetch-additional-information
        with:
          jiraUrl: ${{ env.JIRA_API_URL }}
          jiraCredentials: ${{ env.MCBSTEST_CREDENTIALS }}
          issueList: ${{ github.event.inputs.issueList }}
          atlassianToolsVersion: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}

      # ##################################################################################
      # Erzeugen einer Releasenote im WIKI
      # ##################################################################################
      # GitHub WIKI Repository in das Unterverzeichnis "markdown" auschecken
      - name: Checkout wiki code
        uses: actions/checkout@v3
        with:
          repository: ${{ github.REPOSITORY }}.wiki
          path: markdown

      - name: Create Release Note
        uses: ./mcbscore/github/actions/create-release-note-mcbs
        with:
          componentVersion: ${{ github.event.inputs.releaseVersion }}
          jiraWebUrl: ${{ env.JIRA_WEB_URL }}
          hasSql: ${{ env.SQL }}
          hasDependencies: ${{ steps.fetch-additional-information.outputs.dependency }}
          dependentIssues: ${{ steps.fetch-additional-information.outputs.dependentIssues }}
          releaseUrl: "${{ github.SERVER_URL }}/${{ github.REPOSITORY }}/releases/tag/${{ env.TAG_PREFIX }}${{ github.event.inputs.releaseVersion }}"
          javaVersion: ${{ env.RELEASENOTES_JAVA_RELEASE }}
          epic: ${{ github.event.inputs.epic }}

      # ###################################################################################
      # EPIC / IBN auswerten
      # ###################################################################################
      - name: IBN Datum ermitteln
        id: determine-going-live-date
        uses: ./mcbscore/github/actions/determine-going-live-date
        with:
          jiraUrl: ${{ env.JIRA_API_URL }}
          jiraCredentials: ${{ env.MCBSTEST_CREDENTIALS }}
          epic: ${{ github.event.inputs.epic }}
          atlassianToolsVersion: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}

      # ###################################################################################
      # Teams-Notification
      # ###################################################################################
      - name: Send notification as mail
        uses: ./mcbscore/github/actions/releasebuild-notification
        with:
          component: ${{ env.JIRA_COMPONENT }}
          componentVersion: ${{ github.event.inputs.releaseVersion }}
          goingLiveDate: ${{ steps.determine-going-live-date.outputs.goingLiveDate }}
          issueList: issue_info.csv
          hasSql: ${{ steps.fetch-additional-information.outputs.sql }}
          hasConfiguration: ${{ steps.fetch-additional-information.outputs.config }}
          hasDependencies: ${{ steps.fetch-additional-information.outputs.dependency }}
          additionalText: "extra"
          epic: ${{ github.event.inputs.epic }}
          webhookUri: ${{ env.TEAMS_MAIL }}
          mailTemplate: ${{ env.MAIL_TEMPLATE }}
          atlassianToolsVersion: ${{ env.ATLASSIAN_DEVELOPER_TOOLS_VERSION }}
          repositoryName: ${{ github.REPOSITORY }}
